version: '3'
services:
  axon-server:
    container_name: axon-server
    image: axoniq/axonserver:2024.0.4-jdk-17
    networks:
      - daehwapay_network
    ports:
      - "8024:8024"
      - "8124:8124"
    environment:
      - AXONIQ_AXONSERVER_STANDALONE=true
    volumes:
      - axonserver-data:/axonserver/data
      - axonserver-events:/axonserver/events
      - axonserver-config:/axonserver/config:ro

  mysql:
    image: mysql:8.0
    networks:
      - daehwapay_network
    volumes:
      - ./db/conf.d:/etc/mysql/conf.d
      - ./db/data:/var/lib/mysql
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    env_file: .env
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=riahn
      - MYSQL_USER=riahn
      - MYSQL_PASSWORD=riahn

  membership-service:
    image: pay-membership-service:1.0.0-SNAPSHOT
    networks:
      - daehwapay_network
    ports:
      - "9090:8080"
    depends_on:
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/membership?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=riahn
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=daehwa.logging.out.stdout

  banking-service:
    image: pay-banking-service:1.0.0-SNAPSHOT
    networks:
      - daehwapay_network
    ports:
      - "9091:8082"
    depends_on:
      - mysql
    environment:
      - AXONIQ_AXONSERVER_STANDALONE=true
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/banking?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=riahn
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=daehwa.logging.out.stdout

  money-service:
    image: pay-money-service:1.0.0-SNAPSHOT
    networks:
      - daehwapay_network
    ports:
      - "9092:8083"
    depends_on:
      - mysql
    environment:
      - AXONIQ_AXONSERVER_STANDALONE=true
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/money?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=riahn
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - TASK_TOPIC=daehwa.task.recharge
      - TASK_RESULT_TOPIC=daehwa.task.result
      - LOGGING_TOPIC=daehwa.logging.out.stdout

  zookeeper:
    image: 'arm64v8/zookeeper:3.8'
    networks:
      - daehwapay_network
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_TLS_CLIENT_AUTH=none
      - ZOO_TLS_QUORUM_CLIENT_AUTH=none

  kafka:
    image: 'bitnami/kafka:3.4.0'
    networks:
      - daehwapay_network
    ports:
      - '9072:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_LISTENERS=LC://kafka:29092,LX://kafka:9072
      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9072
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC
      - BITNAMI_DEBUG=true
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    networks:
      - daehwapay_network
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  logging-consumer:
    image: pay-logging-consumer:0.0.1-SNAPSHOT
    networks:
      - daehwapay_network
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=daehwa.logging.out.stdout

  task-consumer:
    image: pay-task-consumer:0.0.1-SNAPSHOT
    networks:
      - daehwapay_network
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - TASK_TOPIC=daehwa.task.recharge
      - TASK_RESULT_TOPIC=daehwa.task.result

networks:
  daehwapay_network:
    driver: bridge

volumes:
  axonserver-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon-server-se/data
  axonserver-events:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon-server-se/events
  axonserver-config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon-server-se/config